{"remainingRequest":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\blade\\blade\\ArcherUI\\src\\views\\system\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\blade\\blade\\ArcherUI\\src\\views\\system\\user.vue","mtime":1592365960940},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getList,\n  getUser,\n  remove,\n  update,\n  add,\n  resetPassword\n} from \"@/api/system/user\";\nimport {getDeptTree} from \"@/api/system/dept\";\nimport {getRoleTree} from \"@/api/system/role\";\nimport {mapGetters} from \"vuex\";\nimport website from '@/config/website';\n\nexport default {\n  data() {\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {},\n      selectionList: [],\n      query: {},\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      init: {\n        roleTree: [],\n        deptTree: [],\n      },\n      option: {\n        tip: false,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        dialogHeight: 450,\n        column: [\n          {\n            label: \"登录账号\",\n            prop: \"account\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入登录账号\",\n              trigger: \"blur\"\n            }],\n            span: website.tenantMode ? 12 : 24,\n          },\n          {\n            label: \"所属租户\",\n            prop: \"tenantId\",\n            type: \"tree\",\n            dicUrl: \"/api/blade-system/tenant/select\",\n            props: {\n              label: \"tenantName\",\n              value: \"tenantId\"\n            },\n            hide: !website.tenantMode,\n            addDisplay: website.tenantMode,\n            editDisplay: website.tenantMode,\n            viewDisplay: website.tenantMode,\n            search: website.tenantMode,\n            rules: [{\n              required: true,\n              message: \"请输入所属租户\",\n              trigger: \"click\"\n            }]\n          },\n          {\n            label: '密码',\n            prop: 'password',\n            hide: true,\n            editDisplay: false,\n            viewDisplay: false,\n            rules: [{required: true, validator: validatePass, trigger: 'blur'}]\n          },\n          {\n            label: '确认密码',\n            prop: 'password2',\n            hide: true,\n            editDisplay: false,\n            viewDisplay: false,\n            rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\n          },\n          {\n            label: \"用户昵称\",\n            prop: \"name\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入用户昵称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"用户姓名\",\n            prop: \"realName\",\n            rules: [{\n              required: true,\n              message: \"请输入用户姓名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"所属角色\",\n            prop: \"roleId\",\n            multiple: true,\n            type: \"tree\",\n            dicData: [],\n            props: {\n              label: \"title\"\n            },\n            slot: true,\n            rules: [{\n              required: true,\n              message: \"请选择所属角色\",\n              trigger: \"click\"\n            }]\n          },\n          {\n            label: \"所属部门\",\n            prop: \"deptId\",\n            type: \"tree\",\n            multiple: true,\n            dicData: [],\n            props: {\n              label: \"title\"\n            },\n            slot: true,\n            rules: [{\n              required: true,\n              message: \"请选择所属部门\",\n              trigger: \"click\"\n            }]\n          },\n          {\n            label: \"手机号码\",\n            prop: \"phone\",\n            overHidden: true\n          },\n          {\n            label: \"电子邮箱\",\n            prop: \"email\",\n            hide: true,\n            overHidden: true\n          },\n          {\n            label: \"用户性别\",\n            prop: \"sex\",\n            type: \"select\",\n            dicData: [\n              {\n                label: \"男\",\n                value: 1\n              },\n              {\n                label: \"女\",\n                value: 2\n              },\n              {\n                label: \"未知\",\n                value: 3\n              }\n            ],\n            hide: true\n          },\n          {\n            label: \"用户生日\",\n            type: \"date\",\n            prop: \"birthday\",\n            format: \"yyyy-MM-dd hh:mm:ss\",\n            valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n            hide: true\n          },\n          {\n            label: \"账号状态\",\n            prop: \"statusName\",\n            hide: true,\n            display: false\n          }\n        ]\n      },\n      data: []\n    };\n  },\n  watch: {\n    'form.tenantId'() {\n      if (this.form.tenantId !== '') {\n        getDeptTree(this.form.tenantId).then(res => {\n          const index = this.$refs.crud.findColumnIndex(\"deptId\");\n          this.option.column[index].dicData = res.data.data;\n        });\n        getRoleTree(this.form.tenantId).then(res => {\n          const index = this.$refs.crud.findColumnIndex(\"roleId\");\n          this.option.column[index].dicData = res.data.data;\n        });\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.user_add, false),\n        viewBtn: this.vaildData(this.permission.user_view, false),\n        delBtn: this.vaildData(this.permission.user_delete, false),\n        editBtn: this.vaildData(this.permission.user_edit, false)\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n  },\n  methods: {\n    rowSave(row, loading, done) {\n      row.deptId = row.deptId.join(\",\");\n      row.roleId = row.roleId.join(\",\");\n      add(row).then(() => {\n        loading();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        done();\n        console.log(error);\n      });\n    },\n    rowUpdate(row, index, loading, done) {\n      row.deptId = row.deptId.join(\",\");\n      row.roleId = row.roleId.join(\",\");\n      update(row).then(() => {\n        loading();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        done();\n        console.log(error);\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params) {\n      this.query = params;\n      this.onLoad(this.page, params);\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    handleReset() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择账号密码重置为123456?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return resetPassword(this.ids);\n        })\n        .then(() => {\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    beforeOpen(done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {\n        getUser(this.form.id).then(res => {\n          this.form = res.data.data;\n          this.form.deptId = this.form.deptId.split(\",\");\n          this.form.deptId.forEach((ele, index) => {\n            this.form.deptId[index] = Number(ele);\n          });\n          this.form.roleId = this.form.roleId.split(\",\");\n          this.form.roleId.forEach((ele, index) => {\n            this.form.roleId[index] = Number(ele);\n          });\n        });\n      }\n      done();\n    },\n    currentChange(currentPage){\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize){\n      this.page.pageSize = pageSize;\n    },\n    onLoad(page, params = {}) {\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n      });\n      getDeptTree(this.form.tenantId).then(res => {\n        const index = this.$refs.crud.findColumnIndex(\"deptId\");\n        this.option.column[index].dicData = res.data.data;\n      });\n      getRoleTree(this.form.tenantId).then(res => {\n        const index = this.$refs.crud.findColumnIndex(\"roleId\");\n        this.option.column[index].dicData = res.data.data;\n      });\n    }\n  }\n};\n",{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :permission=\"permissionList\"\r\n               @row-del=\"rowDel\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               :before-open=\"beforeOpen\"\r\n               :page=\"page\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.user_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   plain\r\n                   v-if=\"permission.user_reset\"\r\n                   icon=\"el-icon-refresh\"\r\n                   @click=\"handleReset\">密码重置\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"roleId\">\r\n        <el-tag>{{row.roleName}}</el-tag>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"deptId\">\r\n        <el-tag>{{row.deptName}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getList,\r\n    getUser,\r\n    remove,\r\n    update,\r\n    add,\r\n    resetPassword\r\n  } from \"@/api/system/user\";\r\n  import {getDeptTree} from \"@/api/system/dept\";\r\n  import {getRoleTree} from \"@/api/system/role\";\r\n  import {mapGetters} from \"vuex\";\r\n  import website from '@/config/website';\r\n\r\n  export default {\r\n    data() {\r\n      const validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      const validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.form.password) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        form: {},\r\n        selectionList: [],\r\n        query: {},\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        init: {\r\n          roleTree: [],\r\n          deptTree: [],\r\n        },\r\n        option: {\r\n          tip: false,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: true,\r\n          dialogHeight: 450,\r\n          column: [\r\n            {\r\n              label: \"登录账号\",\r\n              prop: \"account\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入登录账号\",\r\n                trigger: \"blur\"\r\n              }],\r\n              span: website.tenantMode ? 12 : 24,\r\n            },\r\n            {\r\n              label: \"所属租户\",\r\n              prop: \"tenantId\",\r\n              type: \"tree\",\r\n              dicUrl: \"/api/blade-system/tenant/select\",\r\n              props: {\r\n                label: \"tenantName\",\r\n                value: \"tenantId\"\r\n              },\r\n              hide: !website.tenantMode,\r\n              addDisplay: website.tenantMode,\r\n              editDisplay: website.tenantMode,\r\n              viewDisplay: website.tenantMode,\r\n              search: website.tenantMode,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入所属租户\",\r\n                trigger: \"click\"\r\n              }]\r\n            },\r\n            {\r\n              label: '密码',\r\n              prop: 'password',\r\n              hide: true,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              rules: [{required: true, validator: validatePass, trigger: 'blur'}]\r\n            },\r\n            {\r\n              label: '确认密码',\r\n              prop: 'password2',\r\n              hide: true,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\r\n            },\r\n            {\r\n              label: \"用户昵称\",\r\n              prop: \"name\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入用户昵称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"用户姓名\",\r\n              prop: \"realName\",\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入用户姓名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"所属角色\",\r\n              prop: \"roleId\",\r\n              multiple: true,\r\n              type: \"tree\",\r\n              dicData: [],\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              slot: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择所属角色\",\r\n                trigger: \"click\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"所属部门\",\r\n              prop: \"deptId\",\r\n              type: \"tree\",\r\n              multiple: true,\r\n              dicData: [],\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              slot: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择所属部门\",\r\n                trigger: \"click\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"手机号码\",\r\n              prop: \"phone\",\r\n              overHidden: true\r\n            },\r\n            {\r\n              label: \"电子邮箱\",\r\n              prop: \"email\",\r\n              hide: true,\r\n              overHidden: true\r\n            },\r\n            {\r\n              label: \"用户性别\",\r\n              prop: \"sex\",\r\n              type: \"select\",\r\n              dicData: [\r\n                {\r\n                  label: \"男\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"女\",\r\n                  value: 2\r\n                },\r\n                {\r\n                  label: \"未知\",\r\n                  value: 3\r\n                }\r\n              ],\r\n              hide: true\r\n            },\r\n            {\r\n              label: \"用户生日\",\r\n              type: \"date\",\r\n              prop: \"birthday\",\r\n              format: \"yyyy-MM-dd hh:mm:ss\",\r\n              valueFormat: \"yyyy-MM-dd hh:mm:ss\",\r\n              hide: true\r\n            },\r\n            {\r\n              label: \"账号状态\",\r\n              prop: \"statusName\",\r\n              hide: true,\r\n              display: false\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    watch: {\r\n      'form.tenantId'() {\r\n        if (this.form.tenantId !== '') {\r\n          getDeptTree(this.form.tenantId).then(res => {\r\n            const index = this.$refs.crud.findColumnIndex(\"deptId\");\r\n            this.option.column[index].dicData = res.data.data;\r\n          });\r\n          getRoleTree(this.form.tenantId).then(res => {\r\n            const index = this.$refs.crud.findColumnIndex(\"roleId\");\r\n            this.option.column[index].dicData = res.data.data;\r\n          });\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.user_add, false),\r\n          viewBtn: this.vaildData(this.permission.user_view, false),\r\n          delBtn: this.vaildData(this.permission.user_delete, false),\r\n          editBtn: this.vaildData(this.permission.user_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n    },\r\n    methods: {\r\n      rowSave(row, loading, done) {\r\n        row.deptId = row.deptId.join(\",\");\r\n        row.roleId = row.roleId.join(\",\");\r\n        add(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowUpdate(row, index, loading, done) {\r\n        row.deptId = row.deptId.join(\",\");\r\n        row.roleId = row.roleId.join(\",\");\r\n        update(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params) {\r\n        this.query = params;\r\n        this.onLoad(this.page, params);\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleReset() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return resetPassword(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getUser(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n            this.form.deptId = this.form.deptId.split(\",\");\r\n            this.form.deptId.forEach((ele, index) => {\r\n              this.form.deptId[index] = Number(ele);\r\n            });\r\n            this.form.roleId = this.form.roleId.split(\",\");\r\n            this.form.roleId.forEach((ele, index) => {\r\n              this.form.roleId[index] = Number(ele);\r\n            });\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      currentChange(currentPage){\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize){\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n        });\r\n        getDeptTree(this.form.tenantId).then(res => {\r\n          const index = this.$refs.crud.findColumnIndex(\"deptId\");\r\n          this.option.column[index].dicData = res.data.data;\r\n        });\r\n        getRoleTree(this.form.tenantId).then(res => {\r\n          const index = this.$refs.crud.findColumnIndex(\"roleId\");\r\n          this.option.column[index].dicData = res.data.data;\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}