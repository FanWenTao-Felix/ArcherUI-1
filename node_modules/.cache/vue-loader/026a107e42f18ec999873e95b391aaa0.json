{"remainingRequest":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\model.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\model.vue","mtime":1592365960942},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.none-border {\n  border: 0;\n  background-color: transparent !important;\n}\n\n.step-div {\n  margin-top: 30px;\n}\n",{"version":3,"sources":["model.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsYA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"model.vue","sourceRoot":"src/views/tool","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   icon=\"el-icon-setting\"\r\n                   size=\"small\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleModel(row)\">模型配置\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"modelTable\">\r\n        <el-tag>{{row.modelTable}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <el-dialog title=\"自动模型配置\"\r\n               :visible.sync=\"modelBox\"\r\n               :fullscreen=\"true\">\r\n\r\n      <el-steps :active=\"active\" finish-status=\"success\" simple>\r\n        <el-step title=\"物理表配置\" icon=\"el-icon-coin\"></el-step>\r\n        <el-step title=\"实体类配置\" icon=\"el-icon-files\"></el-step>\r\n        <el-step title=\"表单控件配置\" icon=\"el-icon-document\"></el-step>\r\n        <el-step title=\"表单校验配置\" icon=\"el-icon-document-checked\"></el-step>\r\n        <el-step title=\"列表页面配置\" icon=\"el-icon-notebook-2\"></el-step>\r\n      </el-steps>\r\n\r\n      <div v-show=\"active===stepStart\" class=\"step-div\">\r\n        <avue-crud ref=\"crud0\" :option=\"option0\" :data=\"fields\" :table-loading=\"loading\"\r\n                   @selection-change=\"selectionModelChange\">\r\n          <template slot=\"menuLeft\">\r\n            <el-button type=\"danger\"\r\n                       size=\"small\"\r\n                       icon=\"el-icon-delete\"\r\n                       plain\r\n                       @click=\"handleDeleteModel\">删 除\r\n            </el-button>\r\n          </template>\r\n        </avue-crud>\r\n      </div>\r\n      <div v-show=\"active===1\" class=\"step-div\">\r\n        <avue-crud ref=\"crud1\" :option=\"option1\" :data=\"fields\"></avue-crud>\r\n      </div>\r\n      <div v-show=\"active===2\" class=\"step-div\">\r\n        <avue-crud ref=\"crud2\" :option=\"option2\" :data=\"fields\"></avue-crud>\r\n      </div>\r\n      <div v-show=\"active===3\" class=\"step-div\">\r\n        <avue-crud ref=\"crud3\" :option=\"option3\" :data=\"fields\"></avue-crud>\r\n      </div>\r\n      <div v-show=\"active===stepEnd\" class=\"step-div\">\r\n        <avue-crud ref=\"crud4\" :option=\"option4\" :data=\"fields\"></avue-crud>\r\n      </div>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handlePrev\" :disabled=\"active===stepStart\">上一步</el-button>\r\n        <el-button @click=\"handleNext\" :disabled=\"active===stepEnd\">下一步</el-button>\r\n        <el-button type=\"danger\" @click=\"modelBox = false\">关 闭</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">提 交</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getList,\r\n    getDetail,\r\n    add,\r\n    update,\r\n    remove,\r\n    getTableList,\r\n    getTableInfoByName,\r\n    getModelPrototype,\r\n    submitModelPrototype\r\n  } from \"@/api/tool/model\";\r\n  import {select as selectEntity} from \"@/api/base/customentity\";\r\n  import {option, option0, option1, option2, option3, option4} from \"@/const/tool/model\";\r\n  import {validatenull} from \"@/util/validate\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        modelBox: false,\r\n        modelId: 0,\r\n        datasourceId: 1,\r\n        tableInfo: {},\r\n        active: 0,\r\n        stepStart: 0,\r\n        stepEnd: 4,\r\n        data: [],\r\n        option: option,\r\n        formStep: {},\r\n        fields: [],\r\n        selectionModelList: [],\r\n        option0: option0,\r\n        option1: option1,\r\n        option2: option2,\r\n        option3: option3,\r\n        option4: option4,\r\n      };\r\n    },\r\n    watch: {\r\n      'form.datasourceId'() {\r\n        if (!validatenull(this.form.datasourceId)) {\r\n          getTableList(this.form.datasourceId).then(res => {\r\n            const index = this.$refs.crud.findColumnIndex(\"modelTable\");\r\n            this.option.column[index].dicData = res.data.data;\r\n          });\r\n        }\r\n      },\r\n      'form.modelTable'() {\r\n        if (!validatenull(this.form.modelTable)) {\r\n          getTableInfoByName(this.form.modelTable, this.form.datasourceId).then(res => {\r\n            const result = res.data;\r\n            if (result.success) {\r\n              const {name, comment, entityName} = result.data;\r\n              if (validatenull(this.form.modelClass)) {\r\n                this.form.modelClass = entityName;\r\n              }\r\n              if (validatenull(this.form.modelName)) {\r\n                this.form.modelName = comment;\r\n              }\r\n              if (validatenull(this.form.modelCode)) {\r\n                this.form.modelCode = name;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: true,\r\n          delBtn: true,\r\n          editBtn: true,\r\n          viewBtn: false\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n    },\r\n    methods: {\r\n      rowSave(row, loading, done) {\r\n        add(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowUpdate(row, index, loading, done) {\r\n        update(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleDeleteModel() {\r\n        if (this.selectionModelList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n\r\n            this.data0 = this.data0.filter(item => {\r\n              let arr = [];\r\n              this.selectionModelList.forEach(modelItem => {\r\n                if (item.name === modelItem.name) {\r\n                  arr.push(item);\r\n                }\r\n              });\r\n              return arr.length === 0;\r\n            });\r\n\r\n            this.$refs.crud0.toggleSelection();\r\n            this.$message({type: \"success\", message: \"操作成功!\"});\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params) {\r\n        this.query = params;\r\n        this.onLoad(this.page, params);\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionModelChange(list) {\r\n        this.selectionModelList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      handleModel(row) {\r\n        this.active = this.stepStart;\r\n        this.modelBox = true;\r\n        this.loading = true;\r\n        this.modelId = row.id;\r\n        this.datasourceId = row.datasourceId;\r\n        getModelPrototype(this.modelId, this.datasourceId).then(res => {\r\n          const result = res.data;\r\n          if (result.success) {\r\n            selectEntity().then(res => {\r\n              const ret = res.data;\r\n              if (ret.success) {\r\n                const entityList = ret.data;\r\n                const index = this.$refs.crud1.findColumnIndex(\"propertyEntity\");\r\n                this.option1.column[index].dicData = entityList;\r\n                this.fields = result.data;\r\n                this.fields.forEach(item => {\r\n                  item.$cellEdit = true;\r\n                  item.modelId = this.modelId;\r\n                  if (validatenull(item.id)) {\r\n                    item.isForm = 1;\r\n                    item.isRow = 0;\r\n                    item.isRequired = 0;\r\n                    item.isList = 1;\r\n                    item.isQuery = 0;\r\n                    item.componentType = \"input\";\r\n                  }\r\n                  if (!validatenull(item.name) && !validatenull(item.type)) {\r\n                    item.jdbcName = item.name;\r\n                    item.jdbcType = item.type;\r\n                    entityList.forEach(el => {\r\n                      if (item.propertyType === el.entityName) {\r\n                        item.propertyEntity = el.entityFullName;\r\n                      }\r\n                    });\r\n                  }\r\n                });\r\n                this.loading = false;\r\n              }\r\n            })\r\n          }\r\n        });\r\n      },\r\n      handlePrev() {\r\n        if (this.active-- <= this.stepStart) this.active++;\r\n      },\r\n      handleNext() {\r\n        if (this.active++ >= this.stepEnd) this.active--;\r\n      },\r\n      handleSubmit() {\r\n        console.log(this.fields);\r\n        this.$confirm(\"确定提交模型配置?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          submitModelPrototype(this.fields).then(res => {\r\n            const result = res.data;\r\n            if (result.success) {\r\n              this.$message.success(result.msg);\r\n              this.modelBox = false;\r\n            } else {\r\n              this.$message.error(result.msg);\r\n            }\r\n          })\r\n        });\r\n\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .none-border {\r\n    border: 0;\r\n    background-color: transparent !important;\r\n  }\r\n\r\n  .step-div {\r\n    margin-top: 30px;\r\n  }\r\n</style>\r\n"]}]}