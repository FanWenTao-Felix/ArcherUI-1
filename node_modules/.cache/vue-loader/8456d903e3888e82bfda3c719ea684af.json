{"remainingRequest":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\template.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\template.vue","mtime":1592365960943},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getList,\n  getDetail,\n  add,\n  update,\n  remove,\n  getTemplateFile,\n  getListTemplateFile,\n  addTemplateFile,\n  updateTemplateFile,\n  removeTemplateFile\n} from \"@/api/tool/template\";\nimport {mapGetters} from \"vuex\";\nimport {codemirror} from 'vue-codemirror-lite'\nimport 'codemirror/mode/clike/clike.js'\n\nexport default {\n  components: {\n    codemirror\n  },\n  data() {\n    return {\n      codeOption: {\n        mode: 'text/x-java',\n        tabSize: 2,\n        lineNumbers: true,\n        lineWrapping: true,\n        styleActiveLine: true,\n        matchBrackets: true,\n        viewportMargin: Infinity,\n        extraKeys: {'Ctrl-Space': 'autocomplete'},\n      },\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      drawerVisible: false,\n      templateId: 0,\n      templateName: \"菜单\",\n      option: {\n        tip: false,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogWidth: 300,\n        dialogHeight: 330,\n        column: [\n          {\n            label: \"模板名\",\n            prop: \"templateName\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入模板名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"模板编号\",\n            prop: \"templateCode\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入模板编号\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"模版引擎\",\n            prop: \"templateEngine\",\n            search: true,\n            slot: true,\n            type: \"select\",\n            dicUrl: \"/api/blade-system/dict/dictionary?code=template_category\",\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            rules: [{\n              required: true,\n              message: \"请输入模板名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"允许覆盖\",\n            prop: \"isCover\",\n            search: true,\n            slot: true,\n            type: \"select\",\n            dicData: [\n              {\n                label: \"否\",\n                value: 0,\n              },\n              {\n                label: \"是\",\n                value: 1,\n              },\n            ],\n            rules: [{\n              required: true,\n              message: \"请输入模板编号\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"模板备注\",\n            prop: \"templateRemark\",\n            span: 24,\n            minRows: 6,\n            type: \"textarea\"\n          },\n        ]\n      },\n      data: [],\n      formFile: {},\n      selectionListFile: [],\n      pageFile: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      optionFile: {\n        tip: false,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        menuWidth: 200,\n        dialogHeight: 610,\n        column: [\n          {\n            label: \"文件名称\",\n            prop: \"fileName\",\n            width: 350,\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"文件编号\",\n            prop: \"fileCode\",\n            width: 80,\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入编号\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"系统类型\",\n            prop: \"fileCategory\",\n            width: 80,\n            type: \"select\",\n            dicUrl: \"/api/blade-system/dict/dictionary?code=system_category\",\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择系统类型\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"构建代号\",\n            prop: \"buildCode\",\n            type: \"tree\",\n            multiple: true,\n            width: 150,\n            dicUrl: \"/api/blade-develop/custom-code/select\",\n            props: {\n              label: \"codeKey\",\n              value: \"codeKey\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择构建代号\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"相对路径\",\n            prop: \"filePath\",\n            hide: true,\n            type: \"select\",\n            dicUrl: \"/api/blade-develop/custom-path/select?category=1\",\n            props: {\n              label: \"pathName\",\n              value: \"pathValue\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择相对路径\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"备注\",\n            prop: \"fileRemark\",\n          },\n          {\n            label: \"模板内容\",\n            prop: \"fileContent\",\n            hide: true,\n            formslot: true,\n            span: 24,\n            rules: [{\n              required: true,\n              message: \"请输入内容\",\n              trigger: \"blur\"\n            }],\n          },\n        ]\n      },\n      dataFile: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: true,\n        delBtn: true,\n        editBtn: true,\n        viewBtn: false\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    },\n    fileIds() {\n      let ids = [];\n      this.selectionListFile.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    rowSave(row, loading, done) {\n      add(row).then(() => {\n        loading();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        done();\n        console.log(error);\n      });\n    },\n    rowUpdate(row, index, loading, done) {\n      update(row).then(() => {\n        loading();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        done();\n        console.log(error);\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    beforeOpen(done, type) {\n      if ([\"add\"].includes(type)) {\n        setTimeout(() => {\n          this.form.templateEngine = 1;\n          this.form.isCover = 0;\n        }, 10);\n      }\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(res => {\n          this.form = res.data.data;\n        });\n      }\n      done();\n    },\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params) {\n      this.query = params;\n      this.onLoad(this.page, params);\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    },\n    handleTemplateFile(row) {\n      this.drawerVisible = true;\n      this.templateId = row.id;\n      this.templateName = row.templateName;\n    },\n    handleDrawerClose(hide) {\n      hide();\n    },\n    rowSaveFile(row, loading, done) {\n      row = {\n        ...row,\n        templateId: this.templateId,\n        buildCode: row.buildCode.join(\",\")\n      }\n      addTemplateFile(row).then(() => {\n        loading();\n        this.onLoadFile(this.pageFile);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        done();\n        console.log(error);\n      });\n    },\n    rowUpdateFile(row, index, loading, done) {\n      row = {\n        ...row,\n        templateId: this.templateId,\n        buildCode: row.buildCode.join(\",\")\n      }\n      updateTemplateFile(row).then(() => {\n        loading();\n        this.onLoadFile(this.pageFile);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        done();\n        console.log(error);\n      });\n    },\n    rowDelFile(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return removeTemplateFile(row.id);\n        })\n        .then(() => {\n          this.onLoadFile(this.pageFile);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDeleteFile() {\n      if (this.selectionListFile.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return removeTemplateFile(this.fileIds);\n        })\n        .then(() => {\n          this.onLoadFile(this.pageFile);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crudFile.toggleSelection();\n        });\n    },\n    beforeOpenFile(done, type) {\n      if ([\"add\"].includes(type)) {\n        setTimeout(() => {\n          this.formFile.buildCode = \"main\";\n        }, 10);\n      }\n      if ([\"edit\", \"view\"].includes(type)) {\n        getTemplateFile(this.formFile.id).then(res => {\n          this.formFile = res.data.data;\n        });\n      }\n      done();\n    },\n    searchResetFile() {\n      this.onLoadFile(this.pageFile);\n    },\n    searchChangeFile(params) {\n      this.onLoadFile(this.pageFile, params);\n    },\n    selectionChangeFile(list) {\n      this.selectionListFile = list;\n    },\n    currentChangeFile(currentPage) {\n      this.pageFile.currentPage = currentPage;\n    },\n    sizeChangeFile(pageSize) {\n      this.pageFile.pageSize = pageSize;\n    },\n    onLoadFile(page, params = {}) {\n      const values = {\n        ...params,\n        templateId: this.templateId,\n      }\n      getListTemplateFile(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(res => {\n        const data = res.data.data;\n        this.pageFile.total = data.total;\n        this.dataFile = data.records;\n        this.selectionListFile = [];\n      });\n    },\n  }\n};\n",{"version":3,"sources":["template.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"template.vue","sourceRoot":"src/views/tool","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   icon=\"el-icon-setting\"\r\n                   size=\"small\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleTemplateFile(row)\">模板配置\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"templateEngine\">\r\n        <el-tag>{{row.$templateEngine}}</el-tag>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"isCover\">\r\n        <el-tag>{{row.$isCover}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <avue-drawer :title=\"`[${templateName}] 模板文件配置`\" show-close :width=\"1200\" v-model=\"drawerVisible\"\r\n                 :before-close=\"handleDrawerClose\">\r\n      <avue-crud :option=\"optionFile\"\r\n                 :data=\"dataFile\"\r\n                 :page=\"pageFile\"\r\n                 v-model=\"formFile\"\r\n                 ref=\"crudFile\"\r\n                 @row-del=\"rowDelFile\"\r\n                 @row-update=\"rowUpdateFile\"\r\n                 @row-save=\"rowSaveFile\"\r\n                 :before-open=\"beforeOpenFile\"\r\n                 @search-change=\"searchChangeFile\"\r\n                 @search-reset=\"searchResetFile\"\r\n                 @selection-change=\"selectionChangeFile\"\r\n                 @current-change=\"currentChangeFile\"\r\n                 @size-change=\"sizeChangeFile\"\r\n                 @on-load=\"onLoadFile\">\r\n        <template slot=\"menuLeft\">\r\n          <el-button type=\"danger\"\r\n                     size=\"small\"\r\n                     icon=\"el-icon-delete\"\r\n                     plain\r\n                     @click=\"handleDeleteFile\">删 除\r\n          </el-button>\r\n        </template>\r\n        <template slot-scope=\"scope\" slot=\"fileContentForm\">\r\n          <codemirror :options=\"codeOption\" v-model=\"formFile.fileContent\"></codemirror>\r\n        </template>\r\n      </avue-crud>\r\n    </avue-drawer>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getList,\r\n    getDetail,\r\n    add,\r\n    update,\r\n    remove,\r\n    getTemplateFile,\r\n    getListTemplateFile,\r\n    addTemplateFile,\r\n    updateTemplateFile,\r\n    removeTemplateFile\r\n  } from \"@/api/tool/template\";\r\n  import {mapGetters} from \"vuex\";\r\n  import {codemirror} from 'vue-codemirror-lite'\r\n  import 'codemirror/mode/clike/clike.js'\r\n\r\n  export default {\r\n    components: {\r\n      codemirror\r\n    },\r\n    data() {\r\n      return {\r\n        codeOption: {\r\n          mode: 'text/x-java',\r\n          tabSize: 2,\r\n          lineNumbers: true,\r\n          lineWrapping: true,\r\n          styleActiveLine: true,\r\n          matchBrackets: true,\r\n          viewportMargin: Infinity,\r\n          extraKeys: {'Ctrl-Space': 'autocomplete'},\r\n        },\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        drawerVisible: false,\r\n        templateId: 0,\r\n        templateName: \"菜单\",\r\n        option: {\r\n          tip: false,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          dialogWidth: 300,\r\n          dialogHeight: 330,\r\n          column: [\r\n            {\r\n              label: \"模板名\",\r\n              prop: \"templateName\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入模板名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"模板编号\",\r\n              prop: \"templateCode\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入模板编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"模版引擎\",\r\n              prop: \"templateEngine\",\r\n              search: true,\r\n              slot: true,\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=template_category\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入模板名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"允许覆盖\",\r\n              prop: \"isCover\",\r\n              search: true,\r\n              slot: true,\r\n              type: \"select\",\r\n              dicData: [\r\n                {\r\n                  label: \"否\",\r\n                  value: 0,\r\n                },\r\n                {\r\n                  label: \"是\",\r\n                  value: 1,\r\n                },\r\n              ],\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入模板编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"模板备注\",\r\n              prop: \"templateRemark\",\r\n              span: 24,\r\n              minRows: 6,\r\n              type: \"textarea\"\r\n            },\r\n          ]\r\n        },\r\n        data: [],\r\n        formFile: {},\r\n        selectionListFile: [],\r\n        pageFile: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        optionFile: {\r\n          tip: false,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          menuWidth: 200,\r\n          dialogHeight: 610,\r\n          column: [\r\n            {\r\n              label: \"文件名称\",\r\n              prop: \"fileName\",\r\n              width: 350,\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"文件编号\",\r\n              prop: \"fileCode\",\r\n              width: 80,\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"系统类型\",\r\n              prop: \"fileCategory\",\r\n              width: 80,\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-system/dict/dictionary?code=system_category\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择系统类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"构建代号\",\r\n              prop: \"buildCode\",\r\n              type: \"tree\",\r\n              multiple: true,\r\n              width: 150,\r\n              dicUrl: \"/api/blade-develop/custom-code/select\",\r\n              props: {\r\n                label: \"codeKey\",\r\n                value: \"codeKey\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择构建代号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"相对路径\",\r\n              prop: \"filePath\",\r\n              hide: true,\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-develop/custom-path/select?category=1\",\r\n              props: {\r\n                label: \"pathName\",\r\n                value: \"pathValue\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择相对路径\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"fileRemark\",\r\n            },\r\n            {\r\n              label: \"模板内容\",\r\n              prop: \"fileContent\",\r\n              hide: true,\r\n              formslot: true,\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入内容\",\r\n                trigger: \"blur\"\r\n              }],\r\n            },\r\n          ]\r\n        },\r\n        dataFile: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: true,\r\n          delBtn: true,\r\n          editBtn: true,\r\n          viewBtn: false\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n      fileIds() {\r\n        let ids = [];\r\n        this.selectionListFile.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, loading, done) {\r\n        add(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowUpdate(row, index, loading, done) {\r\n        update(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"add\"].includes(type)) {\r\n          setTimeout(() => {\r\n            this.form.templateEngine = 1;\r\n            this.form.isCover = 0;\r\n          }, 10);\r\n        }\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params) {\r\n        this.query = params;\r\n        this.onLoad(this.page, params);\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      handleTemplateFile(row) {\r\n        this.drawerVisible = true;\r\n        this.templateId = row.id;\r\n        this.templateName = row.templateName;\r\n      },\r\n      handleDrawerClose(hide) {\r\n        hide();\r\n      },\r\n      rowSaveFile(row, loading, done) {\r\n        row = {\r\n          ...row,\r\n          templateId: this.templateId,\r\n          buildCode: row.buildCode.join(\",\")\r\n        }\r\n        addTemplateFile(row).then(() => {\r\n          loading();\r\n          this.onLoadFile(this.pageFile);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowUpdateFile(row, index, loading, done) {\r\n        row = {\r\n          ...row,\r\n          templateId: this.templateId,\r\n          buildCode: row.buildCode.join(\",\")\r\n        }\r\n        updateTemplateFile(row).then(() => {\r\n          loading();\r\n          this.onLoadFile(this.pageFile);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowDelFile(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeTemplateFile(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoadFile(this.pageFile);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDeleteFile() {\r\n        if (this.selectionListFile.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return removeTemplateFile(this.fileIds);\r\n          })\r\n          .then(() => {\r\n            this.onLoadFile(this.pageFile);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crudFile.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpenFile(done, type) {\r\n        if ([\"add\"].includes(type)) {\r\n          setTimeout(() => {\r\n            this.formFile.buildCode = \"main\";\r\n          }, 10);\r\n        }\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getTemplateFile(this.formFile.id).then(res => {\r\n            this.formFile = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchResetFile() {\r\n        this.onLoadFile(this.pageFile);\r\n      },\r\n      searchChangeFile(params) {\r\n        this.onLoadFile(this.pageFile, params);\r\n      },\r\n      selectionChangeFile(list) {\r\n        this.selectionListFile = list;\r\n      },\r\n      currentChangeFile(currentPage) {\r\n        this.pageFile.currentPage = currentPage;\r\n      },\r\n      sizeChangeFile(pageSize) {\r\n        this.pageFile.pageSize = pageSize;\r\n      },\r\n      onLoadFile(page, params = {}) {\r\n        const values = {\r\n          ...params,\r\n          templateId: this.templateId,\r\n        }\r\n        getListTemplateFile(page.currentPage, page.pageSize, Object.assign(values, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.pageFile.total = data.total;\r\n          this.dataFile = data.records;\r\n          this.selectionListFile = [];\r\n        });\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .none-border {\r\n    border: 0;\r\n    background-color: transparent !important;\r\n  }\r\n\r\n  .CodeMirror {\r\n    border: 1px solid #DCDFE6 !important;\r\n    height: 350px !important;\r\n  }\r\n</style>\r\n"]}]}