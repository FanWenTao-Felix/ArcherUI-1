{"remainingRequest":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\plan.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\plan.vue","mtime":1592365960942},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getList, getDetail, add, update, remove, planModels, build, zip} from \"@/api/tool/plan\";\nimport {getDetail as getModelDetail} from \"@/api/tool/model\";\nimport {validatenull} from \"@/util/validate\";\nimport {mapGetters} from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      data: [],\n      option: {\n        tip: false,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogHeight: 650,\n        column: [\n          {\n            label: \"方案名称\",\n            prop: \"planName\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入方案名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"方案编号\",\n            prop: \"planCode\",\n            search: true,\n            rules: [{\n              required: true,\n              message: \"请输入方案编号\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"方案类型\",\n            prop: \"planType\",\n            type: \"select\",\n            dicUrl: \"/api/blade-develop/custom-type/select\",\n            props: {\n              label: \"typeName\",\n              value: \"id\"\n            },\n            rules: [{\n              required: true,\n              message: \"请输入方案类型\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"绑定模板\",\n            prop: \"templateId\",\n            type: \"tree\",\n            slot: true,\n            dicUrl: \"/api/blade-develop/template/select\",\n            props: {\n              label: \"templateName\",\n              value: \"id\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择绑定模板\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"前端目录\",\n            prop: \"frontendPath\",\n            type: \"select\",\n            dicUrl: \"/api/blade-develop/custom-path/select?category=2\",\n            props: {\n              label: \"pathName\",\n              value: \"pathValue\"\n            },\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入前端根目录\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"前端模块\",\n            prop: \"srcPath\",\n            search: true,\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入前端模块名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"后端目录\",\n            prop: \"backendPath\",\n            type: \"select\",\n            dicUrl: \"/api/blade-develop/custom-path/select?category=2\",\n            props: {\n              label: \"pathName\",\n              value: \"pathValue\"\n            },\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入后端根目录\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"后端包名\",\n            prop: \"packagePath\",\n            search: true,\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入后端包名\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            labelWidth: 0,\n            label: '模型绑定',\n            prop: 'model',\n            span: 24,\n            hide: true,\n            formslot: true,\n          },\n        ]\n      },\n      modelData: [],\n      modelForm: {},\n      modelOption: {\n        border: true,\n        index: true,\n        addBtn: true,\n        editBtn: true,\n        viewBtn: false,\n        tip: false,\n        selection: true,\n        dialogWidth: 300,\n        dialogHeight: 300,\n        column: [{\n          label: '模型名称',\n          prop: 'modelId',\n          type: \"tree\",\n          dicUrl: \"/api/blade-develop/model/select\",\n          span: 24,\n          props: {\n            label: \"modelName\",\n            value: \"id\"\n          },\n          rules: [{\n            required: true,\n            message: \"请选择模型名称\",\n            trigger: \"blur\"\n          }],\n        }, {\n          label: '构建代号',\n          prop: 'buildCode',\n          span: 24,\n          type: \"select\",\n          dicUrl: \"/api/blade-develop/custom-code/select\",\n          props: {\n            label: \"codeKey\",\n            value: \"codeKey\"\n          },\n          rules: [{\n            required: true,\n            message: \"请选择构建代号\",\n            trigger: \"blur\"\n          }],\n        }, {\n          label: '模型编号',\n          prop: 'modelCode',\n          disabled: true,\n          span: 24,\n        }]\n      }\n    };\n  },\n  watch: {\n    'modelForm.modelId'() {\n      if (!validatenull(this.modelForm.modelId)) {\n        getModelDetail(this.modelForm.modelId).then(res => {\n          const result = res.data;\n          if (result.success) {\n            const {modelCode} = result.data;\n            this.modelForm.modelCode = modelCode;\n            if (this.modelData.length === 0) {\n              this.modelForm.buildCode = \"main\";\n            }\n          }\n        });\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: true,\n        delBtn: true,\n        editBtn: true,\n        viewBtn: false\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    rowSave(row, loading, done) {\n      const vo = {\n        plan: row,\n        model: this.modelData\n      };\n      add(vo).then(() => {\n        loading();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        done();\n        console.log(error);\n      });\n    },\n    rowUpdate(row, index, loading, done) {\n      const vo = {\n        plan: row,\n        model: this.modelData\n      };\n      update(vo).then(() => {\n        loading();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        done();\n        console.log(error);\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    handleBuild() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"是否生成选中方案?\", {\n        title: \"代码生成确认\",\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          this.loading = true;\n          return build(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        }, error => {\n          this.loading = false;\n          console.log(error);\n        });\n    },\n    handleDownload() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      if (this.selectionList.length > 1) {\n        this.$message.warning(\"只能选择一条数据\");\n        return;\n      }\n      this.$confirm(\"是否导出选中方案?\", {\n        title: \"代码导出确认\",\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          this.loading = true;\n          return zip(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          window.location.href = `/api/blade-develop/plan/download-code?id=${this.ids}`;\n          this.$refs.crud.toggleSelection();\n        }, error => {\n          this.loading = false;\n          console.log(error);\n        });\n    },\n    beforeOpen(done, type) {\n      if ([\"add\"].includes(type)) {\n        this.modelData = [];\n      }\n      if ([\"edit\", \"view\"].includes(type)) {\n        const planId = this.form.id;\n        getDetail(planId).then(res => {\n          this.form = res.data.data;\n          planModels(planId).then(res => {\n            this.modelData = res.data.data;\n          });\n        });\n      }\n      done();\n    },\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params) {\n      this.query = params;\n      this.onLoad(this.page, params);\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    },\n    rowSaveModel(row, loading, done) {\n      loading();\n      // 过滤相同模型id,保证只有一份\n      this.modelData = this.modelData.filter(item => {\n        return item.modelId !== row.modelId;\n      });\n      // 新增模型数据\n      this.modelData.push(row);\n      this.$message({type: \"success\", message: \"操作成功!\"});\n      done();\n    },\n    rowUpdateModel(row, index, loading, done) {\n      loading();\n      // 获取更新前的原始数据\n      const oldRow = this.modelData.filter(item => {\n        return item.$index === index;\n      });\n      // 过滤原始数据\n      this.modelData = this.modelData.filter(item => {\n        return item.modelId !== oldRow[0].modelId;\n      });\n      // 过滤相同模型id,保证只有一份\n      this.modelData = this.modelData.filter(item => {\n        return item.modelId !== row.modelId;\n      });\n      // 新增模型数据\n      this.modelData.push(row);\n      this.$message({type: \"success\", message: \"操作成功!\"});\n      done();\n    },\n    rowDelModel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.modelData = this.modelData.filter(item => {\n          return item.modelId !== row.modelId;\n        });\n        this.$refs.crudModel.toggleSelection();\n        this.$message({type: \"success\", message: \"操作成功!\"});\n      });\n    },\n  }\n};\n",{"version":3,"sources":["plan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"plan.vue","sourceRoot":"src/views/tool","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-refresh\"\r\n                   @click=\"handleBuild\">代码生成\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-download\"\r\n                   @click=\"handleDownload\">代码导出\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"templateId\">\r\n        <el-tag>{{row.$templateId}}</el-tag>\r\n      </template>\r\n      <template slot=\"modelForm\" slot-scope=\"scope\">\r\n        <avue-crud :option=\"modelOption\"\r\n                   :data=\"modelData\"\r\n                   v-model=\"modelForm\"\r\n                   ref=\"crudModel\"\r\n                   @row-del=\"rowDelModel\"\r\n                   @row-update=\"rowUpdateModel\"\r\n                   @row-save=\"rowSaveModel\"></avue-crud>\r\n      </template>\r\n    </avue-crud>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, add, update, remove, planModels, build, zip} from \"@/api/tool/plan\";\r\n  import {getDetail as getModelDetail} from \"@/api/tool/model\";\r\n  import {validatenull} from \"@/util/validate\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        data: [],\r\n        option: {\r\n          tip: false,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          dialogHeight: 650,\r\n          column: [\r\n            {\r\n              label: \"方案名称\",\r\n              prop: \"planName\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入方案名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"方案编号\",\r\n              prop: \"planCode\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入方案编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"方案类型\",\r\n              prop: \"planType\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-develop/custom-type/select\",\r\n              props: {\r\n                label: \"typeName\",\r\n                value: \"id\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入方案类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"绑定模板\",\r\n              prop: \"templateId\",\r\n              type: \"tree\",\r\n              slot: true,\r\n              dicUrl: \"/api/blade-develop/template/select\",\r\n              props: {\r\n                label: \"templateName\",\r\n                value: \"id\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择绑定模板\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"前端目录\",\r\n              prop: \"frontendPath\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-develop/custom-path/select?category=2\",\r\n              props: {\r\n                label: \"pathName\",\r\n                value: \"pathValue\"\r\n              },\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入前端根目录\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"前端模块\",\r\n              prop: \"srcPath\",\r\n              search: true,\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入前端模块名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"后端目录\",\r\n              prop: \"backendPath\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-develop/custom-path/select?category=2\",\r\n              props: {\r\n                label: \"pathName\",\r\n                value: \"pathValue\"\r\n              },\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入后端根目录\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"后端包名\",\r\n              prop: \"packagePath\",\r\n              search: true,\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入后端包名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              labelWidth: 0,\r\n              label: '模型绑定',\r\n              prop: 'model',\r\n              span: 24,\r\n              hide: true,\r\n              formslot: true,\r\n            },\r\n          ]\r\n        },\r\n        modelData: [],\r\n        modelForm: {},\r\n        modelOption: {\r\n          border: true,\r\n          index: true,\r\n          addBtn: true,\r\n          editBtn: true,\r\n          viewBtn: false,\r\n          tip: false,\r\n          selection: true,\r\n          dialogWidth: 300,\r\n          dialogHeight: 300,\r\n          column: [{\r\n            label: '模型名称',\r\n            prop: 'modelId',\r\n            type: \"tree\",\r\n            dicUrl: \"/api/blade-develop/model/select\",\r\n            span: 24,\r\n            props: {\r\n              label: \"modelName\",\r\n              value: \"id\"\r\n            },\r\n            rules: [{\r\n              required: true,\r\n              message: \"请选择模型名称\",\r\n              trigger: \"blur\"\r\n            }],\r\n          }, {\r\n            label: '构建代号',\r\n            prop: 'buildCode',\r\n            span: 24,\r\n            type: \"select\",\r\n            dicUrl: \"/api/blade-develop/custom-code/select\",\r\n            props: {\r\n              label: \"codeKey\",\r\n              value: \"codeKey\"\r\n            },\r\n            rules: [{\r\n              required: true,\r\n              message: \"请选择构建代号\",\r\n              trigger: \"blur\"\r\n            }],\r\n          }, {\r\n            label: '模型编号',\r\n            prop: 'modelCode',\r\n            disabled: true,\r\n            span: 24,\r\n          }]\r\n        }\r\n      };\r\n    },\r\n    watch: {\r\n      'modelForm.modelId'() {\r\n        if (!validatenull(this.modelForm.modelId)) {\r\n          getModelDetail(this.modelForm.modelId).then(res => {\r\n            const result = res.data;\r\n            if (result.success) {\r\n              const {modelCode} = result.data;\r\n              this.modelForm.modelCode = modelCode;\r\n              if (this.modelData.length === 0) {\r\n                this.modelForm.buildCode = \"main\";\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: true,\r\n          delBtn: true,\r\n          editBtn: true,\r\n          viewBtn: false\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, loading, done) {\r\n        const vo = {\r\n          plan: row,\r\n          model: this.modelData\r\n        };\r\n        add(vo).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowUpdate(row, index, loading, done) {\r\n        const vo = {\r\n          plan: row,\r\n          model: this.modelData\r\n        };\r\n        update(vo).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleBuild() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"是否生成选中方案?\", {\r\n          title: \"代码生成确认\",\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            this.loading = true;\r\n            return build(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          }, error => {\r\n            this.loading = false;\r\n            console.log(error);\r\n          });\r\n      },\r\n      handleDownload() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        if (this.selectionList.length > 1) {\r\n          this.$message.warning(\"只能选择一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"是否导出选中方案?\", {\r\n          title: \"代码导出确认\",\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            this.loading = true;\r\n            return zip(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            window.location.href = `/api/blade-develop/plan/download-code?id=${this.ids}`;\r\n            this.$refs.crud.toggleSelection();\r\n          }, error => {\r\n            this.loading = false;\r\n            console.log(error);\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"add\"].includes(type)) {\r\n          this.modelData = [];\r\n        }\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          const planId = this.form.id;\r\n          getDetail(planId).then(res => {\r\n            this.form = res.data.data;\r\n            planModels(planId).then(res => {\r\n              this.modelData = res.data.data;\r\n            });\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params) {\r\n        this.query = params;\r\n        this.onLoad(this.page, params);\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      rowSaveModel(row, loading, done) {\r\n        loading();\r\n        // 过滤相同模型id,保证只有一份\r\n        this.modelData = this.modelData.filter(item => {\r\n          return item.modelId !== row.modelId;\r\n        });\r\n        // 新增模型数据\r\n        this.modelData.push(row);\r\n        this.$message({type: \"success\", message: \"操作成功!\"});\r\n        done();\r\n      },\r\n      rowUpdateModel(row, index, loading, done) {\r\n        loading();\r\n        // 获取更新前的原始数据\r\n        const oldRow = this.modelData.filter(item => {\r\n          return item.$index === index;\r\n        });\r\n        // 过滤原始数据\r\n        this.modelData = this.modelData.filter(item => {\r\n          return item.modelId !== oldRow[0].modelId;\r\n        });\r\n        // 过滤相同模型id,保证只有一份\r\n        this.modelData = this.modelData.filter(item => {\r\n          return item.modelId !== row.modelId;\r\n        });\r\n        // 新增模型数据\r\n        this.modelData.push(row);\r\n        this.$message({type: \"success\", message: \"操作成功!\"});\r\n        done();\r\n      },\r\n      rowDelModel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          this.modelData = this.modelData.filter(item => {\r\n            return item.modelId !== row.modelId;\r\n          });\r\n          this.$refs.crudModel.toggleSelection();\r\n          this.$message({type: \"success\", message: \"操作成功!\"});\r\n        });\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}