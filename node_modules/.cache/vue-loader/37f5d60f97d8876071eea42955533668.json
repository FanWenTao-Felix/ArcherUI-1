{"remainingRequest":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\blade\\blade\\ArcherUI\\node_modules\\vue-codemirror-lite\\codemirror.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-codemirror-lite\\codemirror.vue","mtime":1518754515000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nvar CodeMirror = require('codemirror/lib/codemirror.js')\nrequire('codemirror/lib/codemirror.css')\nexport default {\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Object,\n      default: function () {\n        return {\n          mode: 'text/javascript',\n          lineNumbers: true,\n          lineWrapping: true\n        }\n      }\n    },\n  },\n  data: function () {\n    return {\n      skipNextChangeEvent: false\n    }\n  },\n  ready: function () {\n    var _this = this\n    this.editor = CodeMirror.fromTextArea(this.$el.querySelector('textarea'), this.options)\n    this.editor.setValue(this.value)\n    this.editor.on('change', function(cm) {\n      if (_this.skipNextChangeEvent) {\n        _this.skipNextChangeEvent = false\n        return\n      }\n      _this.value = cm.getValue()\n      if (!!_this.$emit) {\n        _this.$emit('change', cm.getValue())\n      }\n    })\n  },\n  mounted: function () {\n    var _this = this\n    this.editor = CodeMirror.fromTextArea(this.$el.querySelector('textarea'), this.options)\n    this.editor.setValue(this.value)\n    this.editor.on('change', function(cm) {\n      if (_this.skipNextChangeEvent) {\n        _this.skipNextChangeEvent = false\n        return\n      }\n      if (!!_this.$emit) {\n        _this.$emit('change', cm.getValue())\n        _this.$emit('input', cm.getValue())\n      }\n    })\n  },\n  watch: {\n    'value': function (newVal, oldVal) {\n      var editorValue = this.editor.getValue()\n      if (newVal !== editorValue) {\n        this.skipNextChangeEvent = true\n        var scrollInfo = this.editor.getScrollInfo()\n        this.editor.setValue(newVal)\n        this.editor.scrollTo(scrollInfo.left, scrollInfo.top)\n      }\n    },\n    'options': function (newOptions, oldVal) {\n      if (typeof newOptions === 'object') {\n        for (var optionName in newOptions) {\n          if (newOptions.hasOwnProperty(optionName)) {\n            this.editor.setOption(optionName, newOptions[optionName])\n          }\n        }\n      }\n    }\n  },\n  beforeDestroy: function () {\n    if (this.editor) {\n      this.editor.toTextArea()\n    }\n  }\n}\n",{"version":3,"sources":["codemirror.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"codemirror.vue","sourceRoot":"node_modules/vue-codemirror-lite","sourcesContent":["<template>\n  <div class=\"vue-codemirror-wrap\">\n    <textarea></textarea>\n  </div>\n</template>\n\n<script>\n  var CodeMirror = require('codemirror/lib/codemirror.js')\n  require('codemirror/lib/codemirror.css')\n  export default {\n    props: {\n      value: {\n        type: String,\n        default: ''\n      },\n      options: {\n        type: Object,\n        default: function () {\n          return {\n            mode: 'text/javascript',\n            lineNumbers: true,\n            lineWrapping: true\n          }\n        }\n      },\n    },\n    data: function () {\n      return {\n        skipNextChangeEvent: false\n      }\n    },\n    ready: function () {\n      var _this = this\n      this.editor = CodeMirror.fromTextArea(this.$el.querySelector('textarea'), this.options)\n      this.editor.setValue(this.value)\n      this.editor.on('change', function(cm) {\n        if (_this.skipNextChangeEvent) {\n          _this.skipNextChangeEvent = false\n          return\n        }\n        _this.value = cm.getValue()\n        if (!!_this.$emit) {\n          _this.$emit('change', cm.getValue())\n        }\n      })\n    },\n    mounted: function () {\n      var _this = this\n      this.editor = CodeMirror.fromTextArea(this.$el.querySelector('textarea'), this.options)\n      this.editor.setValue(this.value)\n      this.editor.on('change', function(cm) {\n        if (_this.skipNextChangeEvent) {\n          _this.skipNextChangeEvent = false\n          return\n        }\n        if (!!_this.$emit) {\n          _this.$emit('change', cm.getValue())\n          _this.$emit('input', cm.getValue())\n        }\n      })\n    },\n    watch: {\n      'value': function (newVal, oldVal) {\n        var editorValue = this.editor.getValue()\n        if (newVal !== editorValue) {\n          this.skipNextChangeEvent = true\n          var scrollInfo = this.editor.getScrollInfo()\n          this.editor.setValue(newVal)\n          this.editor.scrollTo(scrollInfo.left, scrollInfo.top)\n        }\n      },\n      'options': function (newOptions, oldVal) {\n        if (typeof newOptions === 'object') {\n          for (var optionName in newOptions) {\n            if (newOptions.hasOwnProperty(optionName)) {\n              this.editor.setOption(optionName, newOptions[optionName])\n            }\n          }\n        }\n      }\n    },\n    beforeDestroy: function () {\n      if (this.editor) {\n        this.editor.toTextArea()\n      }\n    }\n  }\n</script>\n\n<style>\n  .CodeMirror-code {\n    font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace;\n  }\n</style>\n"]}]}