{"remainingRequest":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js!E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\blade\\blade\\ArcherUI\\src\\views\\system\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\blade\\blade\\ArcherUI\\src\\views\\system\\user.vue","mtime":1592365960940},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"E:/blade/blade/ArcherUI/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, getUser, remove, update, add, resetPassword } from \"@/api/system/user\";\nimport { getDeptTree } from \"@/api/system/dept\";\nimport { getRoleTree } from \"@/api/system/role\";\nimport { mapGetters } from \"vuex\";\nimport website from '@/config/website';\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      form: {},\n      selectionList: [],\n      query: {},\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      init: {\n        roleTree: [],\n        deptTree: []\n      },\n      option: {\n        tip: false,\n        border: true,\n        index: true,\n        selection: true,\n        viewBtn: true,\n        dialogHeight: 450,\n        column: [{\n          label: \"登录账号\",\n          prop: \"account\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入登录账号\",\n            trigger: \"blur\"\n          }],\n          span: website.tenantMode ? 12 : 24\n        }, {\n          label: \"所属租户\",\n          prop: \"tenantId\",\n          type: \"tree\",\n          dicUrl: \"/api/blade-system/tenant/select\",\n          props: {\n            label: \"tenantName\",\n            value: \"tenantId\"\n          },\n          hide: !website.tenantMode,\n          addDisplay: website.tenantMode,\n          editDisplay: website.tenantMode,\n          viewDisplay: website.tenantMode,\n          search: website.tenantMode,\n          rules: [{\n            required: true,\n            message: \"请输入所属租户\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: '密码',\n          prop: 'password',\n          hide: true,\n          editDisplay: false,\n          viewDisplay: false,\n          rules: [{\n            required: true,\n            validator: validatePass,\n            trigger: 'blur'\n          }]\n        }, {\n          label: '确认密码',\n          prop: 'password2',\n          hide: true,\n          editDisplay: false,\n          viewDisplay: false,\n          rules: [{\n            required: true,\n            validator: validatePass2,\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"用户昵称\",\n          prop: \"name\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入用户昵称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"用户姓名\",\n          prop: \"realName\",\n          rules: [{\n            required: true,\n            message: \"请输入用户姓名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"所属角色\",\n          prop: \"roleId\",\n          multiple: true,\n          type: \"tree\",\n          dicData: [],\n          props: {\n            label: \"title\"\n          },\n          slot: true,\n          rules: [{\n            required: true,\n            message: \"请选择所属角色\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"所属部门\",\n          prop: \"deptId\",\n          type: \"tree\",\n          multiple: true,\n          dicData: [],\n          props: {\n            label: \"title\"\n          },\n          slot: true,\n          rules: [{\n            required: true,\n            message: \"请选择所属部门\",\n            trigger: \"click\"\n          }]\n        }, {\n          label: \"手机号码\",\n          prop: \"phone\",\n          overHidden: true\n        }, {\n          label: \"电子邮箱\",\n          prop: \"email\",\n          hide: true,\n          overHidden: true\n        }, {\n          label: \"用户性别\",\n          prop: \"sex\",\n          type: \"select\",\n          dicData: [{\n            label: \"男\",\n            value: 1\n          }, {\n            label: \"女\",\n            value: 2\n          }, {\n            label: \"未知\",\n            value: 3\n          }],\n          hide: true\n        }, {\n          label: \"用户生日\",\n          type: \"date\",\n          prop: \"birthday\",\n          format: \"yyyy-MM-dd hh:mm:ss\",\n          valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n          hide: true\n        }, {\n          label: \"账号状态\",\n          prop: \"statusName\",\n          hide: true,\n          display: false\n        }]\n      },\n      data: []\n    };\n  },\n  watch: {\n    'form.tenantId': function formTenantId() {\n      var _this2 = this;\n\n      if (this.form.tenantId !== '') {\n        getDeptTree(this.form.tenantId).then(function (res) {\n          var index = _this2.$refs.crud.findColumnIndex(\"deptId\");\n\n          _this2.option.column[index].dicData = res.data.data;\n        });\n        getRoleTree(this.form.tenantId).then(function (res) {\n          var index = _this2.$refs.crud.findColumnIndex(\"roleId\");\n\n          _this2.option.column[index].dicData = res.data.data;\n        });\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.user_add, false),\n        viewBtn: this.vaildData(this.permission.user_view, false),\n        delBtn: this.vaildData(this.permission.user_delete, false),\n        editBtn: this.vaildData(this.permission.user_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowSave: function rowSave(row, loading, done) {\n      var _this3 = this;\n\n      row.deptId = row.deptId.join(\",\");\n      row.roleId = row.roleId.join(\",\");\n      add(row).then(function () {\n        loading();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        done();\n        console.log(error);\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, loading, done) {\n      var _this4 = this;\n\n      row.deptId = row.deptId.join(\",\");\n      row.roleId = row.roleId.join(\",\");\n      update(row).then(function () {\n        loading();\n\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        done();\n        console.log(error);\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this5 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params) {\n      this.query = params;\n      this.onLoad(this.page, params);\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this6.ids);\n      }).then(function () {\n        _this6.onLoad(_this6.page);\n\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this6.$refs.crud.toggleSelection();\n      });\n    },\n    handleReset: function handleReset() {\n      var _this7 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择账号密码重置为123456?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return resetPassword(_this7.ids);\n      }).then(function () {\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this7.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this8 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getUser(this.form.id).then(function (res) {\n          _this8.form = res.data.data;\n          _this8.form.deptId = _this8.form.deptId.split(\",\");\n\n          _this8.form.deptId.forEach(function (ele, index) {\n            _this8.form.deptId[index] = Number(ele);\n          });\n\n          _this8.form.roleId = _this8.form.roleId.split(\",\");\n\n          _this8.form.roleId.forEach(function (ele, index) {\n            _this8.form.roleId[index] = Number(ele);\n          });\n        });\n      }\n\n      done();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this9 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this9.page.total = data.total;\n        _this9.data = data.records;\n      });\n      getDeptTree(this.form.tenantId).then(function (res) {\n        var index = _this9.$refs.crud.findColumnIndex(\"deptId\");\n\n        _this9.option.column[index].dicData = res.data.data;\n      });\n      getRoleTree(this.form.tenantId).then(function (res) {\n        var index = _this9.$refs.crud.findColumnIndex(\"roleId\");\n\n        _this9.option.column[index].dicData = res.data.data;\n      });\n    }\n  }\n};",{"version":3,"sources":["user.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :data=\"data\"\r\n               ref=\"crud\"\r\n               v-model=\"form\"\r\n               :permission=\"permissionList\"\r\n               @row-del=\"rowDel\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               :before-open=\"beforeOpen\"\r\n               :page=\"page\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.user_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   plain\r\n                   v-if=\"permission.user_reset\"\r\n                   icon=\"el-icon-refresh\"\r\n                   @click=\"handleReset\">密码重置\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"roleId\">\r\n        <el-tag>{{row.roleName}}</el-tag>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"deptId\">\r\n        <el-tag>{{row.deptName}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getList,\r\n    getUser,\r\n    remove,\r\n    update,\r\n    add,\r\n    resetPassword\r\n  } from \"@/api/system/user\";\r\n  import {getDeptTree} from \"@/api/system/dept\";\r\n  import {getRoleTree} from \"@/api/system/role\";\r\n  import {mapGetters} from \"vuex\";\r\n  import website from '@/config/website';\r\n\r\n  export default {\r\n    data() {\r\n      const validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      const validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.form.password) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        form: {},\r\n        selectionList: [],\r\n        query: {},\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        init: {\r\n          roleTree: [],\r\n          deptTree: [],\r\n        },\r\n        option: {\r\n          tip: false,\r\n          border: true,\r\n          index: true,\r\n          selection: true,\r\n          viewBtn: true,\r\n          dialogHeight: 450,\r\n          column: [\r\n            {\r\n              label: \"登录账号\",\r\n              prop: \"account\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入登录账号\",\r\n                trigger: \"blur\"\r\n              }],\r\n              span: website.tenantMode ? 12 : 24,\r\n            },\r\n            {\r\n              label: \"所属租户\",\r\n              prop: \"tenantId\",\r\n              type: \"tree\",\r\n              dicUrl: \"/api/blade-system/tenant/select\",\r\n              props: {\r\n                label: \"tenantName\",\r\n                value: \"tenantId\"\r\n              },\r\n              hide: !website.tenantMode,\r\n              addDisplay: website.tenantMode,\r\n              editDisplay: website.tenantMode,\r\n              viewDisplay: website.tenantMode,\r\n              search: website.tenantMode,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入所属租户\",\r\n                trigger: \"click\"\r\n              }]\r\n            },\r\n            {\r\n              label: '密码',\r\n              prop: 'password',\r\n              hide: true,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              rules: [{required: true, validator: validatePass, trigger: 'blur'}]\r\n            },\r\n            {\r\n              label: '确认密码',\r\n              prop: 'password2',\r\n              hide: true,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              rules: [{required: true, validator: validatePass2, trigger: 'blur'}]\r\n            },\r\n            {\r\n              label: \"用户昵称\",\r\n              prop: \"name\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入用户昵称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"用户姓名\",\r\n              prop: \"realName\",\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入用户姓名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"所属角色\",\r\n              prop: \"roleId\",\r\n              multiple: true,\r\n              type: \"tree\",\r\n              dicData: [],\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              slot: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择所属角色\",\r\n                trigger: \"click\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"所属部门\",\r\n              prop: \"deptId\",\r\n              type: \"tree\",\r\n              multiple: true,\r\n              dicData: [],\r\n              props: {\r\n                label: \"title\"\r\n              },\r\n              slot: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择所属部门\",\r\n                trigger: \"click\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"手机号码\",\r\n              prop: \"phone\",\r\n              overHidden: true\r\n            },\r\n            {\r\n              label: \"电子邮箱\",\r\n              prop: \"email\",\r\n              hide: true,\r\n              overHidden: true\r\n            },\r\n            {\r\n              label: \"用户性别\",\r\n              prop: \"sex\",\r\n              type: \"select\",\r\n              dicData: [\r\n                {\r\n                  label: \"男\",\r\n                  value: 1\r\n                },\r\n                {\r\n                  label: \"女\",\r\n                  value: 2\r\n                },\r\n                {\r\n                  label: \"未知\",\r\n                  value: 3\r\n                }\r\n              ],\r\n              hide: true\r\n            },\r\n            {\r\n              label: \"用户生日\",\r\n              type: \"date\",\r\n              prop: \"birthday\",\r\n              format: \"yyyy-MM-dd hh:mm:ss\",\r\n              valueFormat: \"yyyy-MM-dd hh:mm:ss\",\r\n              hide: true\r\n            },\r\n            {\r\n              label: \"账号状态\",\r\n              prop: \"statusName\",\r\n              hide: true,\r\n              display: false\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    watch: {\r\n      'form.tenantId'() {\r\n        if (this.form.tenantId !== '') {\r\n          getDeptTree(this.form.tenantId).then(res => {\r\n            const index = this.$refs.crud.findColumnIndex(\"deptId\");\r\n            this.option.column[index].dicData = res.data.data;\r\n          });\r\n          getRoleTree(this.form.tenantId).then(res => {\r\n            const index = this.$refs.crud.findColumnIndex(\"roleId\");\r\n            this.option.column[index].dicData = res.data.data;\r\n          });\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.user_add, false),\r\n          viewBtn: this.vaildData(this.permission.user_view, false),\r\n          delBtn: this.vaildData(this.permission.user_delete, false),\r\n          editBtn: this.vaildData(this.permission.user_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n    },\r\n    methods: {\r\n      rowSave(row, loading, done) {\r\n        row.deptId = row.deptId.join(\",\");\r\n        row.roleId = row.roleId.join(\",\");\r\n        add(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowUpdate(row, index, loading, done) {\r\n        row.deptId = row.deptId.join(\",\");\r\n        row.roleId = row.roleId.join(\",\");\r\n        update(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params) {\r\n        this.query = params;\r\n        this.onLoad(this.page, params);\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleReset() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择账号密码重置为123456?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return resetPassword(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getUser(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n            this.form.deptId = this.form.deptId.split(\",\");\r\n            this.form.deptId.forEach((ele, index) => {\r\n              this.form.deptId[index] = Number(ele);\r\n            });\r\n            this.form.roleId = this.form.roleId.split(\",\");\r\n            this.form.roleId.forEach((ele, index) => {\r\n              this.form.roleId[index] = Number(ele);\r\n            });\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      currentChange(currentPage){\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize){\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n        });\r\n        getDeptTree(this.form.tenantId).then(res => {\r\n          const index = this.$refs.crud.findColumnIndex(\"deptId\");\r\n          this.option.column[index].dicData = res.data.data;\r\n        });\r\n        getRoleTree(this.form.tenantId).then(res => {\r\n          const index = this.$refs.crud.findColumnIndex(\"roleId\");\r\n          this.option.column[index].dicData = res.data.data;\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/views/system"}]}