{"remainingRequest":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js!E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\model.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\model.vue","mtime":1592365960942},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"E:/blade/blade/ArcherUI/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, getDetail, add, update, remove, getTableList, getTableInfoByName, getModelPrototype, submitModelPrototype } from \"@/api/tool/model\";\nimport { select as selectEntity } from \"@/api/base/customentity\";\nimport { option, option0, option1, option2, option3, option4 } from \"@/const/tool/model\";\nimport { validatenull } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      modelBox: false,\n      modelId: 0,\n      datasourceId: 1,\n      tableInfo: {},\n      active: 0,\n      stepStart: 0,\n      stepEnd: 4,\n      data: [],\n      option: option,\n      formStep: {},\n      fields: [],\n      selectionModelList: [],\n      option0: option0,\n      option1: option1,\n      option2: option2,\n      option3: option3,\n      option4: option4\n    };\n  },\n  watch: {\n    'form.datasourceId': function formDatasourceId() {\n      var _this = this;\n\n      if (!validatenull(this.form.datasourceId)) {\n        getTableList(this.form.datasourceId).then(function (res) {\n          var index = _this.$refs.crud.findColumnIndex(\"modelTable\");\n\n          _this.option.column[index].dicData = res.data.data;\n        });\n      }\n    },\n    'form.modelTable': function formModelTable() {\n      var _this2 = this;\n\n      if (!validatenull(this.form.modelTable)) {\n        getTableInfoByName(this.form.modelTable, this.form.datasourceId).then(function (res) {\n          var result = res.data;\n\n          if (result.success) {\n            var _result$data = result.data,\n                name = _result$data.name,\n                comment = _result$data.comment,\n                entityName = _result$data.entityName;\n\n            if (validatenull(_this2.form.modelClass)) {\n              _this2.form.modelClass = entityName;\n            }\n\n            if (validatenull(_this2.form.modelName)) {\n              _this2.form.modelName = comment;\n            }\n\n            if (validatenull(_this2.form.modelCode)) {\n              _this2.form.modelCode = name;\n            }\n          }\n        });\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: true,\n        delBtn: true,\n        editBtn: true,\n        viewBtn: false\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowSave: function rowSave(row, loading, done) {\n      var _this3 = this;\n\n      add(row).then(function () {\n        loading();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        done();\n        console.log(error);\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, loading, done) {\n      var _this4 = this;\n\n      update(row).then(function () {\n        loading();\n\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        done();\n        console.log(error);\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this5 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this6.ids);\n      }).then(function () {\n        _this6.onLoad(_this6.page);\n\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this6.$refs.crud.toggleSelection();\n      });\n    },\n    handleDeleteModel: function handleDeleteModel() {\n      var _this7 = this;\n\n      if (this.selectionModelList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this7.data0 = _this7.data0.filter(function (item) {\n          var arr = [];\n\n          _this7.selectionModelList.forEach(function (modelItem) {\n            if (item.name === modelItem.name) {\n              arr.push(item);\n            }\n          });\n\n          return arr.length === 0;\n        });\n\n        _this7.$refs.crud0.toggleSelection();\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this8 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          _this8.form = res.data.data;\n        });\n      }\n\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params) {\n      this.query = params;\n      this.onLoad(this.page, params);\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionModelChange: function selectionModelChange(list) {\n      this.selectionModelList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this9 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this9.page.total = data.total;\n        _this9.data = data.records;\n        _this9.loading = false;\n\n        _this9.selectionClear();\n      });\n    },\n    handleModel: function handleModel(row) {\n      var _this10 = this;\n\n      this.active = this.stepStart;\n      this.modelBox = true;\n      this.loading = true;\n      this.modelId = row.id;\n      this.datasourceId = row.datasourceId;\n      getModelPrototype(this.modelId, this.datasourceId).then(function (res) {\n        var result = res.data;\n\n        if (result.success) {\n          selectEntity().then(function (res) {\n            var ret = res.data;\n\n            if (ret.success) {\n              var entityList = ret.data;\n\n              var index = _this10.$refs.crud1.findColumnIndex(\"propertyEntity\");\n\n              _this10.option1.column[index].dicData = entityList;\n              _this10.fields = result.data;\n\n              _this10.fields.forEach(function (item) {\n                item.$cellEdit = true;\n                item.modelId = _this10.modelId;\n\n                if (validatenull(item.id)) {\n                  item.isForm = 1;\n                  item.isRow = 0;\n                  item.isRequired = 0;\n                  item.isList = 1;\n                  item.isQuery = 0;\n                  item.componentType = \"input\";\n                }\n\n                if (!validatenull(item.name) && !validatenull(item.type)) {\n                  item.jdbcName = item.name;\n                  item.jdbcType = item.type;\n                  entityList.forEach(function (el) {\n                    if (item.propertyType === el.entityName) {\n                      item.propertyEntity = el.entityFullName;\n                    }\n                  });\n                }\n              });\n\n              _this10.loading = false;\n            }\n          });\n        }\n      });\n    },\n    handlePrev: function handlePrev() {\n      if (this.active-- <= this.stepStart) this.active++;\n    },\n    handleNext: function handleNext() {\n      if (this.active++ >= this.stepEnd) this.active--;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this11 = this;\n\n      console.log(this.fields);\n      this.$confirm(\"确定提交模型配置?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        submitModelPrototype(_this11.fields).then(function (res) {\n          var result = res.data;\n\n          if (result.success) {\n            _this11.$message.success(result.msg);\n\n            _this11.modelBox = false;\n          } else {\n            _this11.$message.error(result.msg);\n          }\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["model.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"menu\">\r\n        <el-button type=\"text\"\r\n                   icon=\"el-icon-setting\"\r\n                   size=\"small\"\r\n                   plain\r\n                   class=\"none-border\"\r\n                   @click.stop=\"handleModel(row)\">模型配置\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"modelTable\">\r\n        <el-tag>{{row.modelTable}}</el-tag>\r\n      </template>\r\n    </avue-crud>\r\n    <el-dialog title=\"自动模型配置\"\r\n               :visible.sync=\"modelBox\"\r\n               :fullscreen=\"true\">\r\n\r\n      <el-steps :active=\"active\" finish-status=\"success\" simple>\r\n        <el-step title=\"物理表配置\" icon=\"el-icon-coin\"></el-step>\r\n        <el-step title=\"实体类配置\" icon=\"el-icon-files\"></el-step>\r\n        <el-step title=\"表单控件配置\" icon=\"el-icon-document\"></el-step>\r\n        <el-step title=\"表单校验配置\" icon=\"el-icon-document-checked\"></el-step>\r\n        <el-step title=\"列表页面配置\" icon=\"el-icon-notebook-2\"></el-step>\r\n      </el-steps>\r\n\r\n      <div v-show=\"active===stepStart\" class=\"step-div\">\r\n        <avue-crud ref=\"crud0\" :option=\"option0\" :data=\"fields\" :table-loading=\"loading\"\r\n                   @selection-change=\"selectionModelChange\">\r\n          <template slot=\"menuLeft\">\r\n            <el-button type=\"danger\"\r\n                       size=\"small\"\r\n                       icon=\"el-icon-delete\"\r\n                       plain\r\n                       @click=\"handleDeleteModel\">删 除\r\n            </el-button>\r\n          </template>\r\n        </avue-crud>\r\n      </div>\r\n      <div v-show=\"active===1\" class=\"step-div\">\r\n        <avue-crud ref=\"crud1\" :option=\"option1\" :data=\"fields\"></avue-crud>\r\n      </div>\r\n      <div v-show=\"active===2\" class=\"step-div\">\r\n        <avue-crud ref=\"crud2\" :option=\"option2\" :data=\"fields\"></avue-crud>\r\n      </div>\r\n      <div v-show=\"active===3\" class=\"step-div\">\r\n        <avue-crud ref=\"crud3\" :option=\"option3\" :data=\"fields\"></avue-crud>\r\n      </div>\r\n      <div v-show=\"active===stepEnd\" class=\"step-div\">\r\n        <avue-crud ref=\"crud4\" :option=\"option4\" :data=\"fields\"></avue-crud>\r\n      </div>\r\n\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handlePrev\" :disabled=\"active===stepStart\">上一步</el-button>\r\n        <el-button @click=\"handleNext\" :disabled=\"active===stepEnd\">下一步</el-button>\r\n        <el-button type=\"danger\" @click=\"modelBox = false\">关 闭</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">提 交</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    getList,\r\n    getDetail,\r\n    add,\r\n    update,\r\n    remove,\r\n    getTableList,\r\n    getTableInfoByName,\r\n    getModelPrototype,\r\n    submitModelPrototype\r\n  } from \"@/api/tool/model\";\r\n  import {select as selectEntity} from \"@/api/base/customentity\";\r\n  import {option, option0, option1, option2, option3, option4} from \"@/const/tool/model\";\r\n  import {validatenull} from \"@/util/validate\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        modelBox: false,\r\n        modelId: 0,\r\n        datasourceId: 1,\r\n        tableInfo: {},\r\n        active: 0,\r\n        stepStart: 0,\r\n        stepEnd: 4,\r\n        data: [],\r\n        option: option,\r\n        formStep: {},\r\n        fields: [],\r\n        selectionModelList: [],\r\n        option0: option0,\r\n        option1: option1,\r\n        option2: option2,\r\n        option3: option3,\r\n        option4: option4,\r\n      };\r\n    },\r\n    watch: {\r\n      'form.datasourceId'() {\r\n        if (!validatenull(this.form.datasourceId)) {\r\n          getTableList(this.form.datasourceId).then(res => {\r\n            const index = this.$refs.crud.findColumnIndex(\"modelTable\");\r\n            this.option.column[index].dicData = res.data.data;\r\n          });\r\n        }\r\n      },\r\n      'form.modelTable'() {\r\n        if (!validatenull(this.form.modelTable)) {\r\n          getTableInfoByName(this.form.modelTable, this.form.datasourceId).then(res => {\r\n            const result = res.data;\r\n            if (result.success) {\r\n              const {name, comment, entityName} = result.data;\r\n              if (validatenull(this.form.modelClass)) {\r\n                this.form.modelClass = entityName;\r\n              }\r\n              if (validatenull(this.form.modelName)) {\r\n                this.form.modelName = comment;\r\n              }\r\n              if (validatenull(this.form.modelCode)) {\r\n                this.form.modelCode = name;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: true,\r\n          delBtn: true,\r\n          editBtn: true,\r\n          viewBtn: false\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n    },\r\n    methods: {\r\n      rowSave(row, loading, done) {\r\n        add(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowUpdate(row, index, loading, done) {\r\n        update(row).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleDeleteModel() {\r\n        if (this.selectionModelList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n\r\n            this.data0 = this.data0.filter(item => {\r\n              let arr = [];\r\n              this.selectionModelList.forEach(modelItem => {\r\n                if (item.name === modelItem.name) {\r\n                  arr.push(item);\r\n                }\r\n              });\r\n              return arr.length === 0;\r\n            });\r\n\r\n            this.$refs.crud0.toggleSelection();\r\n            this.$message({type: \"success\", message: \"操作成功!\"});\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params) {\r\n        this.query = params;\r\n        this.onLoad(this.page, params);\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionModelChange(list) {\r\n        this.selectionModelList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      handleModel(row) {\r\n        this.active = this.stepStart;\r\n        this.modelBox = true;\r\n        this.loading = true;\r\n        this.modelId = row.id;\r\n        this.datasourceId = row.datasourceId;\r\n        getModelPrototype(this.modelId, this.datasourceId).then(res => {\r\n          const result = res.data;\r\n          if (result.success) {\r\n            selectEntity().then(res => {\r\n              const ret = res.data;\r\n              if (ret.success) {\r\n                const entityList = ret.data;\r\n                const index = this.$refs.crud1.findColumnIndex(\"propertyEntity\");\r\n                this.option1.column[index].dicData = entityList;\r\n                this.fields = result.data;\r\n                this.fields.forEach(item => {\r\n                  item.$cellEdit = true;\r\n                  item.modelId = this.modelId;\r\n                  if (validatenull(item.id)) {\r\n                    item.isForm = 1;\r\n                    item.isRow = 0;\r\n                    item.isRequired = 0;\r\n                    item.isList = 1;\r\n                    item.isQuery = 0;\r\n                    item.componentType = \"input\";\r\n                  }\r\n                  if (!validatenull(item.name) && !validatenull(item.type)) {\r\n                    item.jdbcName = item.name;\r\n                    item.jdbcType = item.type;\r\n                    entityList.forEach(el => {\r\n                      if (item.propertyType === el.entityName) {\r\n                        item.propertyEntity = el.entityFullName;\r\n                      }\r\n                    });\r\n                  }\r\n                });\r\n                this.loading = false;\r\n              }\r\n            })\r\n          }\r\n        });\r\n      },\r\n      handlePrev() {\r\n        if (this.active-- <= this.stepStart) this.active++;\r\n      },\r\n      handleNext() {\r\n        if (this.active++ >= this.stepEnd) this.active--;\r\n      },\r\n      handleSubmit() {\r\n        console.log(this.fields);\r\n        this.$confirm(\"确定提交模型配置?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          submitModelPrototype(this.fields).then(res => {\r\n            const result = res.data;\r\n            if (result.success) {\r\n              this.$message.success(result.msg);\r\n              this.modelBox = false;\r\n            } else {\r\n              this.$message.error(result.msg);\r\n            }\r\n          })\r\n        });\r\n\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .none-border {\r\n    border: 0;\r\n    background-color: transparent !important;\r\n  }\r\n\r\n  .step-div {\r\n    margin-top: 30px;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/tool"}]}