{"remainingRequest":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js!E:\\blade\\blade\\ArcherUI\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\blade\\blade\\ArcherUI\\src\\api\\tool\\model.js","dependencies":[{"path":"E:\\blade\\blade\\ArcherUI\\src\\api\\tool\\model.js","mtime":1592365960880},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"E:/blade/blade/ArcherUI/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport request from '@/router/axios';\nexport var getList = function getList(current, size, params) {\n  return request({\n    url: '/api/blade-develop/model/list',\n    method: 'get',\n    params: _objectSpread(_objectSpread({}, params), {}, {\n      current: current,\n      size: size\n    })\n  });\n};\nexport var getDetail = function getDetail(id) {\n  return request({\n    url: '/api/blade-develop/model/detail',\n    method: 'get',\n    params: {\n      id: id\n    }\n  });\n};\nexport var remove = function remove(ids) {\n  return request({\n    url: '/api/blade-develop/model/remove',\n    method: 'post',\n    params: {\n      ids: ids\n    }\n  });\n};\nexport var add = function add(row) {\n  return request({\n    url: '/api/blade-develop/model/submit',\n    method: 'post',\n    data: row\n  });\n};\nexport var update = function update(row) {\n  return request({\n    url: '/api/blade-develop/model/submit',\n    method: 'post',\n    data: row\n  });\n};\nexport var getTableList = function getTableList(datasourceId) {\n  return request({\n    url: '/api/blade-develop/model/table-list',\n    method: 'get',\n    params: {\n      datasourceId: datasourceId\n    }\n  });\n};\nexport var getTableInfo = function getTableInfo(modelId, datasourceId) {\n  return request({\n    url: '/api/blade-develop/model/table-info',\n    method: 'get',\n    params: {\n      modelId: modelId,\n      datasourceId: datasourceId\n    }\n  });\n};\nexport var getTableInfoByName = function getTableInfoByName(tableName, datasourceId) {\n  return request({\n    url: '/api/blade-develop/model/table-info',\n    method: 'get',\n    params: {\n      tableName: tableName,\n      datasourceId: datasourceId\n    }\n  });\n};\nexport var getModelPrototype = function getModelPrototype(modelId, datasourceId) {\n  return request({\n    url: '/api/blade-develop/model/model-prototype',\n    method: 'get',\n    params: {\n      modelId: modelId,\n      datasourceId: datasourceId\n    }\n  });\n};\nexport var submitModelPrototype = function submitModelPrototype(row) {\n  return request({\n    url: '/api/blade-develop/model-prototype/submit-list',\n    method: 'post',\n    data: row\n  });\n};",{"version":3,"sources":["E:/blade/blade/ArcherUI/src/api/tool/model.js"],"names":["request","getList","current","size","params","url","method","getDetail","id","remove","ids","add","row","data","update","getTableList","datasourceId","getTableInfo","modelId","getTableInfoByName","tableName","getModelPrototype","submitModelPrototype"],"mappings":"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","sourcesContent":["import request from '@/router/axios';\r\n\r\nexport const getList = (current, size, params) => {\r\n  return request({\r\n    url: '/api/blade-develop/model/list',\r\n    method: 'get',\r\n    params: {\r\n      ...params,\r\n      current,\r\n      size,\r\n    }\r\n  })\r\n}\r\n\r\nexport const getDetail = (id) => {\r\n  return request({\r\n    url: '/api/blade-develop/model/detail',\r\n    method: 'get',\r\n    params: {\r\n      id\r\n    }\r\n  })\r\n}\r\n\r\nexport const remove = (ids) => {\r\n  return request({\r\n    url: '/api/blade-develop/model/remove',\r\n    method: 'post',\r\n    params: {\r\n      ids,\r\n    }\r\n  })\r\n}\r\n\r\nexport const add = (row) => {\r\n  return request({\r\n    url: '/api/blade-develop/model/submit',\r\n    method: 'post',\r\n    data: row\r\n  })\r\n}\r\n\r\nexport const update = (row) => {\r\n  return request({\r\n    url: '/api/blade-develop/model/submit',\r\n    method: 'post',\r\n    data: row\r\n  })\r\n}\r\n\r\nexport const getTableList = (datasourceId) => {\r\n  return request({\r\n    url: '/api/blade-develop/model/table-list',\r\n    method: 'get',\r\n    params: {\r\n      datasourceId,\r\n    }\r\n  })\r\n}\r\n\r\nexport const getTableInfo = (modelId, datasourceId) => {\r\n  return request({\r\n    url: '/api/blade-develop/model/table-info',\r\n    method: 'get',\r\n    params: {\r\n      modelId,\r\n      datasourceId,\r\n    }\r\n  })\r\n}\r\n\r\nexport const getTableInfoByName = (tableName, datasourceId) => {\r\n  return request({\r\n    url: '/api/blade-develop/model/table-info',\r\n    method: 'get',\r\n    params: {\r\n      tableName,\r\n      datasourceId,\r\n    }\r\n  })\r\n}\r\n\r\nexport const getModelPrototype = (modelId, datasourceId) => {\r\n  return request({\r\n    url: '/api/blade-develop/model/model-prototype',\r\n    method: 'get',\r\n    params: {\r\n      modelId,\r\n      datasourceId,\r\n    }\r\n  })\r\n}\r\n\r\nexport const submitModelPrototype = (row) => {\r\n  return request({\r\n    url: '/api/blade-develop/model-prototype/submit-list',\r\n    method: 'post',\r\n    data: row\r\n  })\r\n}\r\n"]}]}