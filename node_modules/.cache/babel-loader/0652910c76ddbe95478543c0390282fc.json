{"remainingRequest":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js!E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\plan.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\blade\\blade\\ArcherUI\\src\\views\\tool\\plan.vue","mtime":1592365960942},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\blade\\blade\\ArcherUI\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"E:/blade/blade/ArcherUI/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, getDetail, add, update, remove, planModels, build, zip } from \"@/api/tool/plan\";\nimport { getDetail as getModelDetail } from \"@/api/tool/model\";\nimport { validatenull } from \"@/util/validate\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      data: [],\n      option: {\n        tip: false,\n        border: true,\n        index: true,\n        viewBtn: true,\n        selection: true,\n        dialogHeight: 650,\n        column: [{\n          label: \"方案名称\",\n          prop: \"planName\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入方案名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"方案编号\",\n          prop: \"planCode\",\n          search: true,\n          rules: [{\n            required: true,\n            message: \"请输入方案编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"方案类型\",\n          prop: \"planType\",\n          type: \"select\",\n          dicUrl: \"/api/blade-develop/custom-type/select\",\n          props: {\n            label: \"typeName\",\n            value: \"id\"\n          },\n          rules: [{\n            required: true,\n            message: \"请输入方案类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"绑定模板\",\n          prop: \"templateId\",\n          type: \"tree\",\n          slot: true,\n          dicUrl: \"/api/blade-develop/template/select\",\n          props: {\n            label: \"templateName\",\n            value: \"id\"\n          },\n          rules: [{\n            required: true,\n            message: \"请选择绑定模板\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"前端目录\",\n          prop: \"frontendPath\",\n          type: \"select\",\n          dicUrl: \"/api/blade-develop/custom-path/select?category=2\",\n          props: {\n            label: \"pathName\",\n            value: \"pathValue\"\n          },\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请输入前端根目录\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"前端模块\",\n          prop: \"srcPath\",\n          search: true,\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请输入前端模块名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"后端目录\",\n          prop: \"backendPath\",\n          type: \"select\",\n          dicUrl: \"/api/blade-develop/custom-path/select?category=2\",\n          props: {\n            label: \"pathName\",\n            value: \"pathValue\"\n          },\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请输入后端根目录\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"后端包名\",\n          prop: \"packagePath\",\n          search: true,\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"请输入后端包名\",\n            trigger: \"blur\"\n          }]\n        }, {\n          labelWidth: 0,\n          label: '模型绑定',\n          prop: 'model',\n          span: 24,\n          hide: true,\n          formslot: true\n        }]\n      },\n      modelData: [],\n      modelForm: {},\n      modelOption: {\n        border: true,\n        index: true,\n        addBtn: true,\n        editBtn: true,\n        viewBtn: false,\n        tip: false,\n        selection: true,\n        dialogWidth: 300,\n        dialogHeight: 300,\n        column: [{\n          label: '模型名称',\n          prop: 'modelId',\n          type: \"tree\",\n          dicUrl: \"/api/blade-develop/model/select\",\n          span: 24,\n          props: {\n            label: \"modelName\",\n            value: \"id\"\n          },\n          rules: [{\n            required: true,\n            message: \"请选择模型名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: '构建代号',\n          prop: 'buildCode',\n          span: 24,\n          type: \"select\",\n          dicUrl: \"/api/blade-develop/custom-code/select\",\n          props: {\n            label: \"codeKey\",\n            value: \"codeKey\"\n          },\n          rules: [{\n            required: true,\n            message: \"请选择构建代号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: '模型编号',\n          prop: 'modelCode',\n          disabled: true,\n          span: 24\n        }]\n      }\n    };\n  },\n  watch: {\n    'modelForm.modelId': function modelFormModelId() {\n      var _this = this;\n\n      if (!validatenull(this.modelForm.modelId)) {\n        getModelDetail(this.modelForm.modelId).then(function (res) {\n          var result = res.data;\n\n          if (result.success) {\n            var modelCode = result.data.modelCode;\n            _this.modelForm.modelCode = modelCode;\n\n            if (_this.modelData.length === 0) {\n              _this.modelForm.buildCode = \"main\";\n            }\n          }\n        });\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: true,\n        delBtn: true,\n        editBtn: true,\n        viewBtn: false\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowSave: function rowSave(row, loading, done) {\n      var _this2 = this;\n\n      var vo = {\n        plan: row,\n        model: this.modelData\n      };\n      add(vo).then(function () {\n        loading();\n\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        done();\n        console.log(error);\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, loading, done) {\n      var _this3 = this;\n\n      var vo = {\n        plan: row,\n        model: this.modelData\n      };\n      update(vo).then(function () {\n        loading();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        done();\n        console.log(error);\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this5.ids);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this5.$refs.crud.toggleSelection();\n      });\n    },\n    handleBuild: function handleBuild() {\n      var _this6 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"是否生成选中方案?\", {\n        title: \"代码生成确认\",\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this6.loading = true;\n        return build(_this6.ids);\n      }).then(function () {\n        _this6.onLoad(_this6.page);\n\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this6.$refs.crud.toggleSelection();\n      }, function (error) {\n        _this6.loading = false;\n        console.log(error);\n      });\n    },\n    handleDownload: function handleDownload() {\n      var _this7 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      if (this.selectionList.length > 1) {\n        this.$message.warning(\"只能选择一条数据\");\n        return;\n      }\n\n      this.$confirm(\"是否导出选中方案?\", {\n        title: \"代码导出确认\",\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this7.loading = true;\n        return zip(_this7.ids);\n      }).then(function () {\n        _this7.onLoad(_this7.page);\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        window.location.href = \"/api/blade-develop/plan/download-code?id=\".concat(_this7.ids);\n\n        _this7.$refs.crud.toggleSelection();\n      }, function (error) {\n        _this7.loading = false;\n        console.log(error);\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this8 = this;\n\n      if ([\"add\"].includes(type)) {\n        this.modelData = [];\n      }\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        var planId = this.form.id;\n        getDetail(planId).then(function (res) {\n          _this8.form = res.data.data;\n          planModels(planId).then(function (res) {\n            _this8.modelData = res.data.data;\n          });\n        });\n      }\n\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params) {\n      this.query = params;\n      this.onLoad(this.page, params);\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this9 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this9.page.total = data.total;\n        _this9.data = data.records;\n        _this9.loading = false;\n\n        _this9.selectionClear();\n      });\n    },\n    rowSaveModel: function rowSaveModel(row, loading, done) {\n      loading(); // 过滤相同模型id,保证只有一份\n\n      this.modelData = this.modelData.filter(function (item) {\n        return item.modelId !== row.modelId;\n      }); // 新增模型数据\n\n      this.modelData.push(row);\n      this.$message({\n        type: \"success\",\n        message: \"操作成功!\"\n      });\n      done();\n    },\n    rowUpdateModel: function rowUpdateModel(row, index, loading, done) {\n      loading(); // 获取更新前的原始数据\n\n      var oldRow = this.modelData.filter(function (item) {\n        return item.$index === index;\n      }); // 过滤原始数据\n\n      this.modelData = this.modelData.filter(function (item) {\n        return item.modelId !== oldRow[0].modelId;\n      }); // 过滤相同模型id,保证只有一份\n\n      this.modelData = this.modelData.filter(function (item) {\n        return item.modelId !== row.modelId;\n      }); // 新增模型数据\n\n      this.modelData.push(row);\n      this.$message({\n        type: \"success\",\n        message: \"操作成功!\"\n      });\n      done();\n    },\n    rowDelModel: function rowDelModel(row) {\n      var _this10 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this10.modelData = _this10.modelData.filter(function (item) {\n          return item.modelId !== row.modelId;\n        });\n\n        _this10.$refs.crudModel.toggleSelection();\n\n        _this10.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["plan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-refresh\"\r\n                   @click=\"handleBuild\">代码生成\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-download\"\r\n                   @click=\"handleDownload\">代码导出\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\"\r\n                slot=\"templateId\">\r\n        <el-tag>{{row.$templateId}}</el-tag>\r\n      </template>\r\n      <template slot=\"modelForm\" slot-scope=\"scope\">\r\n        <avue-crud :option=\"modelOption\"\r\n                   :data=\"modelData\"\r\n                   v-model=\"modelForm\"\r\n                   ref=\"crudModel\"\r\n                   @row-del=\"rowDelModel\"\r\n                   @row-update=\"rowUpdateModel\"\r\n                   @row-save=\"rowSaveModel\"></avue-crud>\r\n      </template>\r\n    </avue-crud>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, add, update, remove, planModels, build, zip} from \"@/api/tool/plan\";\r\n  import {getDetail as getModelDetail} from \"@/api/tool/model\";\r\n  import {validatenull} from \"@/util/validate\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        data: [],\r\n        option: {\r\n          tip: false,\r\n          border: true,\r\n          index: true,\r\n          viewBtn: true,\r\n          selection: true,\r\n          dialogHeight: 650,\r\n          column: [\r\n            {\r\n              label: \"方案名称\",\r\n              prop: \"planName\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入方案名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"方案编号\",\r\n              prop: \"planCode\",\r\n              search: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入方案编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"方案类型\",\r\n              prop: \"planType\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-develop/custom-type/select\",\r\n              props: {\r\n                label: \"typeName\",\r\n                value: \"id\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入方案类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"绑定模板\",\r\n              prop: \"templateId\",\r\n              type: \"tree\",\r\n              slot: true,\r\n              dicUrl: \"/api/blade-develop/template/select\",\r\n              props: {\r\n                label: \"templateName\",\r\n                value: \"id\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择绑定模板\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"前端目录\",\r\n              prop: \"frontendPath\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-develop/custom-path/select?category=2\",\r\n              props: {\r\n                label: \"pathName\",\r\n                value: \"pathValue\"\r\n              },\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入前端根目录\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"前端模块\",\r\n              prop: \"srcPath\",\r\n              search: true,\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入前端模块名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"后端目录\",\r\n              prop: \"backendPath\",\r\n              type: \"select\",\r\n              dicUrl: \"/api/blade-develop/custom-path/select?category=2\",\r\n              props: {\r\n                label: \"pathName\",\r\n                value: \"pathValue\"\r\n              },\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入后端根目录\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"后端包名\",\r\n              prop: \"packagePath\",\r\n              search: true,\r\n              hide: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入后端包名\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              labelWidth: 0,\r\n              label: '模型绑定',\r\n              prop: 'model',\r\n              span: 24,\r\n              hide: true,\r\n              formslot: true,\r\n            },\r\n          ]\r\n        },\r\n        modelData: [],\r\n        modelForm: {},\r\n        modelOption: {\r\n          border: true,\r\n          index: true,\r\n          addBtn: true,\r\n          editBtn: true,\r\n          viewBtn: false,\r\n          tip: false,\r\n          selection: true,\r\n          dialogWidth: 300,\r\n          dialogHeight: 300,\r\n          column: [{\r\n            label: '模型名称',\r\n            prop: 'modelId',\r\n            type: \"tree\",\r\n            dicUrl: \"/api/blade-develop/model/select\",\r\n            span: 24,\r\n            props: {\r\n              label: \"modelName\",\r\n              value: \"id\"\r\n            },\r\n            rules: [{\r\n              required: true,\r\n              message: \"请选择模型名称\",\r\n              trigger: \"blur\"\r\n            }],\r\n          }, {\r\n            label: '构建代号',\r\n            prop: 'buildCode',\r\n            span: 24,\r\n            type: \"select\",\r\n            dicUrl: \"/api/blade-develop/custom-code/select\",\r\n            props: {\r\n              label: \"codeKey\",\r\n              value: \"codeKey\"\r\n            },\r\n            rules: [{\r\n              required: true,\r\n              message: \"请选择构建代号\",\r\n              trigger: \"blur\"\r\n            }],\r\n          }, {\r\n            label: '模型编号',\r\n            prop: 'modelCode',\r\n            disabled: true,\r\n            span: 24,\r\n          }]\r\n        }\r\n      };\r\n    },\r\n    watch: {\r\n      'modelForm.modelId'() {\r\n        if (!validatenull(this.modelForm.modelId)) {\r\n          getModelDetail(this.modelForm.modelId).then(res => {\r\n            const result = res.data;\r\n            if (result.success) {\r\n              const {modelCode} = result.data;\r\n              this.modelForm.modelCode = modelCode;\r\n              if (this.modelData.length === 0) {\r\n                this.modelForm.buildCode = \"main\";\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: true,\r\n          delBtn: true,\r\n          editBtn: true,\r\n          viewBtn: false\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, loading, done) {\r\n        const vo = {\r\n          plan: row,\r\n          model: this.modelData\r\n        };\r\n        add(vo).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowUpdate(row, index, loading, done) {\r\n        const vo = {\r\n          plan: row,\r\n          model: this.modelData\r\n        };\r\n        update(vo).then(() => {\r\n          loading();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          done();\r\n          console.log(error);\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleBuild() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"是否生成选中方案?\", {\r\n          title: \"代码生成确认\",\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            this.loading = true;\r\n            return build(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          }, error => {\r\n            this.loading = false;\r\n            console.log(error);\r\n          });\r\n      },\r\n      handleDownload() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        if (this.selectionList.length > 1) {\r\n          this.$message.warning(\"只能选择一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"是否导出选中方案?\", {\r\n          title: \"代码导出确认\",\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            this.loading = true;\r\n            return zip(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            window.location.href = `/api/blade-develop/plan/download-code?id=${this.ids}`;\r\n            this.$refs.crud.toggleSelection();\r\n          }, error => {\r\n            this.loading = false;\r\n            console.log(error);\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"add\"].includes(type)) {\r\n          this.modelData = [];\r\n        }\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          const planId = this.form.id;\r\n          getDetail(planId).then(res => {\r\n            this.form = res.data.data;\r\n            planModels(planId).then(res => {\r\n              this.modelData = res.data.data;\r\n            });\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params) {\r\n        this.query = params;\r\n        this.onLoad(this.page, params);\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      rowSaveModel(row, loading, done) {\r\n        loading();\r\n        // 过滤相同模型id,保证只有一份\r\n        this.modelData = this.modelData.filter(item => {\r\n          return item.modelId !== row.modelId;\r\n        });\r\n        // 新增模型数据\r\n        this.modelData.push(row);\r\n        this.$message({type: \"success\", message: \"操作成功!\"});\r\n        done();\r\n      },\r\n      rowUpdateModel(row, index, loading, done) {\r\n        loading();\r\n        // 获取更新前的原始数据\r\n        const oldRow = this.modelData.filter(item => {\r\n          return item.$index === index;\r\n        });\r\n        // 过滤原始数据\r\n        this.modelData = this.modelData.filter(item => {\r\n          return item.modelId !== oldRow[0].modelId;\r\n        });\r\n        // 过滤相同模型id,保证只有一份\r\n        this.modelData = this.modelData.filter(item => {\r\n          return item.modelId !== row.modelId;\r\n        });\r\n        // 新增模型数据\r\n        this.modelData.push(row);\r\n        this.$message({type: \"success\", message: \"操作成功!\"});\r\n        done();\r\n      },\r\n      rowDelModel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          this.modelData = this.modelData.filter(item => {\r\n            return item.modelId !== row.modelId;\r\n          });\r\n          this.$refs.crudModel.toggleSelection();\r\n          this.$message({type: \"success\", message: \"操作成功!\"});\r\n        });\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/views/tool"}]}